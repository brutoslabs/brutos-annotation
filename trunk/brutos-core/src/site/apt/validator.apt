Validação

 Antes de serem atualizadas as propriedades de um controlador, de um bean ou mesmo os parâmetros de uma ação, podem ser feitas verificações para se determinar se o valor deve ser aceito ou não. Caso não seja aceito uma mensagem pode ser exibida.

 Para validar é usado o elemento \<validator/\>. Somente é permitido o seu uso nos elementos \<mapping-ref/\>, \<property/\>, \<constructor-arg/\> e \<parameter/\>.

 O elemento \<validator/\> possui o seguinte atributo:

*----------+--------------------------------------------------------------+
| Atributo | Descrição                                                    |
*----------+--------------------------------------------------------------+
| message  | Mensagem que será exibida caso o valor seja considerado      |
|          | inválido.                                                    |
*----------+--------------------------------------------------------------+

-----
<bean name="myBean" target="br.myapp.MyBean">
  <constructor-arg bean="val">
    <validator message="The ${value} is invalid!">
      <rule name="min_length">3</rule>
      <rule name="max_length">60</rule>
    </validator>
  </contructor-arg>
</bean>
-----

* Regras de validação pré-definidas.

 No Brutos MVC existem algumas regras de validação pré-definidas. Se for necessário, é possível criar novas regras de validação.

 Segue abaixo as regras de validação pré-definidas:

*------------+--------------------------------------------------------------+
| Regra      | Descrição                                                    |
*------------+--------------------------------------------------------------+
| min        | Define o valor mínimo. Somente usado em valores numéricos    |
*------------+--------------------------------------------------------------+
| max        | Define o valor máximo. Somente usado em valores numéricos    |
*------------+--------------------------------------------------------------+
| minlength  | Define o tamanho mínimo.                                     |
*------------+--------------------------------------------------------------+
| maxlength  | Define o tamanho máximo.                                     |
*------------+--------------------------------------------------------------+
| matches    | É validado a partir de uma expressão regular.                |
*------------+--------------------------------------------------------------+
| required   | O valor é obrigatório.                                       |
*------------+--------------------------------------------------------------+
| equal      | O valor tem que ser igual a outro pré-definido.              |
*------------+--------------------------------------------------------------+

* Customizando uma regra de validação

 Se necessário, é possível criar regras de validação.
 Um validador tem que implementar a interface ValidationRule.

 Veja o exemplo abaixo:

-----
public class RangeValidationRule implements ValidationRule{

    public void validate(Properties config, Object source, Object value)
            throws ValidatorException {

        if( !(value instanceof Number) )
            throw new ValidatorException("invalid type: " +  value.getClass());

        String range = config.getProperty("range");
        if( !range.matches("\\d+-\\d+") )
            throw new ValidatorException("invalid range syntax: " +  range );

        String[] vals = range.split("-");
        Integer start = Integer.parseInt(vals[0]);
        Integer end = Integer.parseInt(vals[1]);

        Integer val = ((Number)value).intValue();
        if( val<start || val>end )
            throw new ValidatorException();
    }

}
-----

 A configuração deve ser como segue:

-----
<context:params>
 <context:param name="org.brandao.brutos.validator.rules.range"
   value="RangeValidationRule"/>
<context:params>
-----

 e deve ser usado da seguinte forma:

-----
<bean name="myBean" target="br.myapp.MyBean">
  <constructor-arg bean="val">
    <validator message="The ${value} is invalid!">
      <rule name="range">3-60</rule>
    </validator>
  </contructor-arg>
</bean>
-----
