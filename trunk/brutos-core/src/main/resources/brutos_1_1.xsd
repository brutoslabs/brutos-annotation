<?xml version="1.0" encoding="UTF-8"?>

<!--
  Brutos Web MVC http://brutos.sourceforge.net/
  Copyright (C) 2009 Afonso Brandao. (afonso.rbn@gmail.com)

  This library is free software. You can redistribute it
  and/or modify it under the terms of the GNU General Public
  License (GPL) version 3.0 or (at your option) any later
  version.
  You may obtain a copy of the License at

  http://www.gnu.org/licenses/gpl.html

  Distributed WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
  either express or implied.
-->

<xsd:schema xmlns:xsd="http://www.w3.org/2001/XMLSchema"
            xmlns:ns="http://brutos.sourceforge.net/targetNS"
            targetNamespace="http://brutos.sourceforge.net/targetNS"
            xmlns="http://brutos.sourceforge.net/targetNS"
           elementFormDefault="qualified">

    <xsd:element name="brutos-configuration">
        <xsd:complexType>
            <xsd:all>

          <!-- *************************************************************** -->
                <xsd:element name="auto-config" minOccurs="0" maxOccurs="1"/>

                <xsd:element name="annotation-config" minOccurs="0" maxOccurs="1"/>

                <xsd:element name="importers" minOccurs="0" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="import" minOccurs="0" maxOccurs="unbounded">
                                <xsd:complexType>
                                  <xsd:attribute name="resource" type="xsd:string"/>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>

                <xsd:element name="context-params" minOccurs="0" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="context-param" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:simpleContent>
                                        <xsd:extension base="xsd:string">
                                        <xsd:attribute name="name" type="xsd:string" use="required"/>
                                        <xsd:attribute name="value" type="xsd:string"/>
                                        </xsd:extension>
                                    </xsd:simpleContent>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>

          <!-- *************************************************************** -->

                <xsd:element name="types" minOccurs="0" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="type" maxOccurs="unbounded">
                                <xsd:complexType>
                                    <xsd:simpleContent>
                                        <xsd:extension base="xsd:string">
                                            <xsd:attribute name="class-type" type="xsd:string" use="required"/>
                                            <xsd:attribute name="factory" type="xsd:string"/>
                                        </xsd:extension>
                                    </xsd:simpleContent>
                                </xsd:complexType>
                            </xsd:element>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>

                <xsd:element name="interceptors" type="interceptors" minOccurs="0" maxOccurs="1"/>

                <xsd:element name="controllers" minOccurs="0" maxOccurs="1">
                    <xsd:complexType>
                        <xsd:sequence>
                            <xsd:element name="controller" type="controller" maxOccurs="unbounded"/>
                        </xsd:sequence>
                    </xsd:complexType>
                </xsd:element>

            </xsd:all>
            <xsd:attribute name="encoding" default="UTF-8"/>
            <xsd:attribute name="version" default="1.1">
                <xsd:simpleType>
                    <xsd:restriction base="xsd:token">
                        <xsd:pattern value="[0-9]+(\.[0-9]+)*"/>
                    </xsd:restriction>
                </xsd:simpleType>
            </xsd:attribute>
        </xsd:complexType>
    </xsd:element>

  <!-- *************************************************************** -->

    <xsd:complexType name="controller">
        <xsd:sequence>
            <xsd:element name="alias" minOccurs="0" type="alias" maxOccurs="unbounded"/>
            <xsd:element name="interceptor-ref" type="interceptor-ref" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="bean" type="mapping-bean" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="property" type="controller-property" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="action" type="action" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="throw-safe" minOccurs="0" type="throw-safe" maxOccurs="unbounded"/>
        </xsd:sequence>

        <xsd:attribute name="id" type="xsd:string"/>
        <xsd:attribute name="dispatcher" type="dispatcher" default="forward"/>
        <xsd:attribute name="view" type="xsd:string"/>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="class" type="xsd:string"/>
        <xsd:attribute name="scope" type="xsd:string" default="request"/>
        <xsd:attribute name="action-id" type="xsd:string" default="invoke"/>
        <xsd:attribute name="default-action" type="xsd:string"/>
    </xsd:complexType>

    <xsd:complexType name="action">
        <xsd:sequence>
            <xsd:element name="parameter" minOccurs="0"
                     type="parameter" maxOccurs="unbounded"/>
            <xsd:element name="throw-safe" minOccurs="0"
                     type="throw-safe" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="id" type="xsd:string" use="required"/>
        <xsd:attribute name="executor" type="xsd:string"/>
        <xsd:attribute name="result" type="xsd:string"/>
        <xsd:attribute name="view" type="xsd:string"/>
        <xsd:attribute name="dispatcher" type="dispatcher" default="forward"/>
    </xsd:complexType>

    <xsd:complexType name="throw-safe">
        <xsd:attribute name="view" type="xsd:string"/>
        <xsd:attribute name="target" type="xsd:string" use="required"/>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="dispatcher" type="dispatcher" default="forward"/>
    </xsd:complexType>

    <xsd:complexType name="mapping-bean">
        <xsd:sequence>
            <xsd:element name="constructor-arg" type="constructor-arg" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="property" type="property" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="key" type="mapping-bean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="element" type="mapping-bean" minOccurs="0" maxOccurs="1"/>
            <!--<xsd:element name="bean" type="mapping-bean" minOccurs="1" maxOccurs="1"/>
            <xsd:element name="ref" type="mapping-ref" minOccurs="1" maxOccurs="1"/>-->
            <!--<xsd:element name="extend" type="extend-mapping-bean"  minOccurs="0" maxOccurs="1"/>-->
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="separator" type="xsd:string" default="."/>
        <xsd:attribute name="index-format" type="xsd:string" default="[$index]"/>
        <xsd:attribute name="factory" type="xsd:string"/>
        <xsd:attribute name="method-factory" type="xsd:string"/>
        <!--<xsd:attribute name="init-method" type="xsd:string"/>
        <xsd:attribute name="destroy-method" type="xsd:string"/>-->
        <xsd:attribute name="target" type="class" use="required"/>
    </xsd:complexType>

<!--
    <xsd:complexType name="extend-mapping-bean">
        <xsd:sequence>
            <xsd:element name="key" type="mapping-key" minOccurs="0" maxOccurs="1"/>
            <xsd:choice>
                <xsd:element name="bean" type="mapping-bean" minOccurs="1" maxOccurs="1"/>
                <xsd:element name="ref" type="mapping-ref" minOccurs="1" maxOccurs="1"/>
            </xsd:choice>
        </xsd:sequence>
        <xsd:attribute name="ref" type="xsd:string"/>
    </xsd:complexType>
-->
<!--
    <xsd:complexType name="mapping-key">
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="type" type="xsd:string" use="required"/>
        <xsd:attribute name="scope" type="xsd:string" default="request"/>
    </xsd:complexType>
-->
    <xsd:complexType name="mapping-ref">
        <xsd:sequence>
            <xsd:element name="validator" type="validator" minOccurs="0" maxOccurs="1"/>
        </xsd:sequence>
        <xsd:attribute name="bean" type="xsd:string"/>
        <xsd:attribute name="enum-property" type="enum" default="ordinal"/>
        <xsd:attribute name="value" type="xsd:string"/>
        <xsd:attribute name="temporal-property" type="xsd:string" default="dd/MM/yyyy"/>
        <xsd:attribute name="mapping" type="xsd:boolean" default="false"/>
        <xsd:attribute name="scope" type="xsd:string" default="param"/>
        <xsd:attribute name="factory" type="class"/>
    </xsd:complexType>

    <!--
    <xsd:complexType name="mapping-ref">
        <xsd:complexContent>
            <xsd:extension base="constructor-arg">
                <xsd:attribute name="bean" type="xsd:string"/>
            </xsd:extension>
        </xsd:complexContent>
    </xsd:complexType>
    -->

    <xsd:simpleType name="class">
        <xsd:restriction base="xsd:token">
            <xsd:pattern value="((\[)+([Z|B|C|D|F|I|J|S]){0,1})|(((\[)+L)([a-z]|[A-Z])+(\.([a-z]|[A-Z]|[0-9])+)*\;)|(([a-z]|[A-Z])+(\.([a-z]|[A-Z]|[0-9])+)*)"/>
        <!--<xsd:pattern value="([a-z]|[A-Z])+(\.([a-z]|[A-Z]|[0-9])+)*"/>-->
        </xsd:restriction>
    </xsd:simpleType>

  <!-- *************************************************************** -->

    <xsd:simpleType name="uri">
        <xsd:restriction base="xsd:token">
            <xsd:pattern value="(\/([a-z]|[A-Z]|[0-9])+)*"/>
        </xsd:restriction>
    </xsd:simpleType>

  <!-- *************************************************************** -->

    <xsd:simpleType name="scope">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="request"/>
            <xsd:enumeration value="session"/>
            <xsd:enumeration value="application"/>
            <xsd:enumeration value="prototype"/>
        </xsd:restriction>
    </xsd:simpleType>

  <!-- *************************************************************** -->

    <xsd:simpleType name="dispatcher">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="include"/>
            <xsd:enumeration value="forward"/>
            <xsd:enumeration value="redirect"/>
        </xsd:restriction>
    </xsd:simpleType>

  <!-- *************************************************************** -->

    <xsd:simpleType name="controllerscope">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="request"/>
            <xsd:enumeration value="session"/>
            <xsd:enumeration value="application"/>
            <xsd:enumeration value="flash"/>
            <xsd:enumeration value="ioc"/>
        </xsd:restriction>
    </xsd:simpleType>

  <!-- *************************************************************** -->

    <xsd:simpleType name="enum">
        <xsd:restriction base="xsd:string">
            <xsd:enumeration value="ordinal"/>
            <xsd:enumeration value="string"/>
        </xsd:restriction>
    </xsd:simpleType>

  <!-- *************************************************************** -->

    <xsd:complexType name="property">
        <xsd:choice>
            <xsd:element name="ref" type="mapping-ref" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="bean" type="mapping-bean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="value" type="xsd:string" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="validator" type="validator" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="value" type="xsd:string"/>
        <xsd:attribute name="enum-property" type="enum" default="ordinal"/>
        <xsd:attribute name="temporal-property" type="xsd:string" default="dd/MM/yyyy"/>
        <xsd:attribute name="ref" type="xsd:string"/>
        <xsd:attribute name="scope" type="xsd:string" default="request"/>
        <xsd:attribute name="factory" type="class"/>
        <xsd:attribute name="bean" type="xsd:string"/>
        <xsd:attribute name="mapping" type="xsd:boolean" default="false"/>
        <!--<xsd:attribute name="mapping-name" type="xsd:string"/>-->
        <!--<xsd:sequence>
            <xsd:element name="bean" type="mapping-bean"  minOccurs="1" maxOccurs="1"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="property-name" type="xsd:string" use="required"/>
        <xsd:attribute name="enum-property" type="enum" default="ordinal"/>
        <xsd:attribute name="temporal-property" type="xsd:string" default="dd/MM/yyyy"/>
        <xsd:attribute name="ref" type="xsd:string"/>
        <xsd:attribute name="scope" type="xsd:string" default="request"/>
        <xsd:attribute name="factory" type="class"/>-->
    </xsd:complexType>

    <xsd:complexType name="constructor-arg">
        <xsd:choice>
            <xsd:element name="ref" type="mapping-ref" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="bean" type="mapping-bean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="value" type="xsd:string" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="validator" type="validator" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
        <!--<xsd:attribute name="name" type="xsd:string"/>-->
        <xsd:attribute name="enum-property" type="enum" default="ordinal"/>
        <xsd:attribute name="value" type="xsd:string"/>
        <xsd:attribute name="temporal-property" type="xsd:string" default="dd/MM/yyyy"/>
        <xsd:attribute name="bean" type="xsd:string"/>
        <xsd:attribute name="mapping" type="xsd:boolean" default="false"/>
        <xsd:attribute name="scope" type="xsd:string" default="request"/>
        <xsd:attribute name="factory" type="class"/>
        <!--<xsd:attribute name="mapping-name" type="xsd:string"/>-->
    </xsd:complexType>

  <!-- *************************************************************** -->
    <xsd:complexType name="validator">
        <xsd:sequence>
            <xsd:element name="rule" type="rule"  minOccurs="1" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="message" type="xsd:string"/>
    </xsd:complexType>
  <!-- *************************************************************** -->

    <xsd:complexType name="rule">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="name" type="xsd:string" use="required"/>
                <xsd:attribute name="value" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>
  <!-- *************************************************************** -->

    <xsd:complexType name="controller-property">
        <xsd:choice>
            <xsd:element name="ref" type="mapping-ref" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="bean" type="mapping-bean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="value" type="xsd:string" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="validator" type="validator" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="property-name" type="xsd:string" use="required"/>
        <xsd:attribute name="enum-property" type="enum" default="ordinal"/>
        <xsd:attribute name="temporal-property" type="xsd:string" default="dd/MM/yyyy"/>
        <xsd:attribute name="bean" type="xsd:string"/>
        <xsd:attribute name="mapping" type="xsd:boolean"/>
        <xsd:attribute name="scope" type="xsd:string" default="request"/>
        <xsd:attribute name="factory" type="xsd:string"/>
    </xsd:complexType>

  <!-- *************************************************************** -->

    <xsd:complexType name="parameter">
        <xsd:choice>
            <xsd:element name="ref" type="mapping-ref" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="bean" type="mapping-bean" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="value" type="xsd:string" minOccurs="0" maxOccurs="1"/>
            <xsd:element name="validator" type="validator" minOccurs="0" maxOccurs="1"/>
        </xsd:choice>
        <xsd:attribute name="enum-property" type="enum" default="ordinal"/>
        <xsd:attribute name="value" type="xsd:string"/>
        <xsd:attribute name="temporal-property" type="xsd:string" default="dd/MM/yyyy"/>
        <xsd:attribute name="bean" type="xsd:string"/>
        <xsd:attribute name="mapping" type="xsd:boolean"/>
        <xsd:attribute name="scope" type="xsd:string" default="request"/>
        <xsd:attribute name="factory" type="class"/>
        <xsd:attribute name="type" type="xsd:string"/>
        <!--
        <xsd:attribute name="name" type="xsd:string" use="required"/>
        <xsd:attribute name="type" type="xsd:string" use="required"/>
        <xsd:attribute name="enum-property" type="enum" default="ordinal"/>
        <xsd:attribute name="temporal-property" type="xsd:string" default="dd/MM/yyyy"/>
        <xsd:attribute name="ref" type="xsd:string"/>
        <xsd:attribute name="scope" type="xsd:string" default="request"/>
        <xsd:attribute name="factory" type="xsd:string"/>-->
    </xsd:complexType>

    <xsd:complexType name="props">
        <xsd:sequence>
            <xsd:element name="prop" minOccurs="0" maxOccurs="unbounded">
                <xsd:complexType>
                    <xsd:sequence>
                        <xsd:element name="value" type="xsd:string" minOccurs="0"/>
                    </xsd:sequence>
                    <xsd:attribute name="name" type="xsd:string" use="required"/>
                    <xsd:attribute name="value" type="xsd:string"/>
                </xsd:complexType>
            </xsd:element>
        </xsd:sequence>
    </xsd:complexType>

    <xsd:complexType name="ref">
        <xsd:attribute name="bean" type="xsd:string" use="required"/>
    </xsd:complexType>

    <xsd:complexType name="interceptors">
        <xsd:sequence>
            <xsd:element name="interceptor" type="interceptor" minOccurs="0" maxOccurs="unbounded"/>
            <xsd:element name="interceptor-stack" type="interceptor-stack" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
    </xsd:complexType>

  <!-- *************************************************************** -->

    <xsd:complexType name="interceptor">
        <xsd:sequence>
            <xsd:element name="param" type="param" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="class" type="xsd:string"/>
        <xsd:attribute name="default" type="xsd:boolean"/>
    </xsd:complexType>

  <!-- *************************************************************** -->

    <xsd:complexType name="param">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string">
                <xsd:attribute name="name" type="xsd:string" use="required"/>
                <xsd:attribute name="value" type="xsd:string"/>
            </xsd:extension>
        </xsd:simpleContent>
    </xsd:complexType>

  <!-- *************************************************************** -->

    <xsd:complexType name="alias">
        <xsd:simpleContent>
            <xsd:extension base="xsd:string"/>
        </xsd:simpleContent>
    </xsd:complexType>

  <!-- *************************************************************** -->

    <xsd:complexType name="interceptor-ref">
        <xsd:sequence>
            <xsd:element name="param" type="param" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
    </xsd:complexType>

  <!-- *************************************************************** -->

    <xsd:complexType name="interceptor-stack">
        <xsd:sequence>
            <xsd:element name="interceptor-ref" type="interceptor-ref" minOccurs="0" maxOccurs="unbounded"/>
        </xsd:sequence>
        <xsd:attribute name="name" type="xsd:string"/>
        <xsd:attribute name="default" type="xsd:boolean"/>
    </xsd:complexType>

</xsd:schema>
